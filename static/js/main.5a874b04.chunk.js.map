{"version":3,"sources":["app/components/console-page/ConsoleButton.jsx","app/components/console-page/ConsoleImg.jsx","app/components/console-page/ConsoleTitle.jsx","app/components/OutOfStock.jsx","app/components/console-page/Console.jsx","app/actions/addAction.js","app/actions/type.js","app/page/ConsolePage.jsx","app/actions/consoleActions.js","app/components/controller-page/ControllerButton.jsx","app/components/controller-page/ControllerTitle.jsx","app/components/controller-page/ControllerDescription.jsx","app/components/controller-page/ControllerImg.jsx","app/components/controller-page/Controller.jsx","app/page/ControllerPage.jsx","app/actions/controllerActions.js","app/components/games-page/GameTitle.jsx","app/components/games-page/GameButton.jsx","app/components/games-page/GameImg.jsx","app/components/games-page/Game.jsx","app/page/GamesPage.jsx","app/actions/gamesActions.js","app/services/HttpServices.js","app/components/main-page/CheckoutCalculator.jsx","app/services/UserServices.js","app/components/main-page/CheckedConsole.jsx","app/components/main-page/CheckoutConsole.jsx","app/components/main-page/CheckedController.jsx","app/components/main-page/CheckoutController.jsx","app/components/main-page/CheckedGame.jsx","app/components/main-page/CheckoutGames.jsx","app/page/Main.jsx","app/actions/mainActions.js","app/components/tv-page/TvButton.jsx","app/components/tv-page/TvImg.jsx","app/components/tv-page/TvTitle.jsx","app/components/tv-page/Tv.jsx","app/page/TvPage.jsx","app/actions/tvActions.js","app/page/AccountPage.jsx","app/actions/accountActions.js","app/page/RegisterPage.jsx","app/page/SignInPage.jsx","app/components/Navbar.jsx","app/components/Footer.jsx","app/components/access.js","app/components/PublicRoute.jsx","app/components/PrivateRoute.jsx","app/reducers/consoleReducer.js","app/reducers/controllerReducer.js","app/reducers/gameReducer.js","app/reducers/tvReducer.js","app/reducers/accountReducer.js","app/reducers/mainReducer.js","app/reducers/addReducer.js","app/reducers/index.js","app/store.js","app/App.js","serviceWorker.js","index.js"],"names":["ConsoleButton","props","className","id","onClick","update","ConsoleImg","ConsoleTitle","title","OutOfStock","state","React","Component","Console","consoleId","available","checkOutItem","item","dispatch","type","payload","ConsolePage","updateConsoleAvailable","e","data","parseInt","target","updateConsole","writeCheckOutItem","changePage","history","push","consoles","consoleUpdated","this","fetchConsoles","prevProps","prevState","setState","map","console","key","name","nextProps","_id","log","connect","token","localStorage","getItem","fetch","method","headers","then","response","json","body","JSON","stringify","ControllerButton","ControllerTitle","ControllerDescription","controllerId","ControllerImg","Controller","ControllerPage","updateControllerAvailable","count","updateController","controllers","controllerUpdated","fetchControllers","contr","controller","GamesTitle","GamesButton","GamesImg","Game","GameTitle","GameImg","GameButton","gameId","GamesPage","updateGameAvailable","updateGame","games","gameUpdated","fetchGames","element","game","http","url","CheckoutCalculator","rent","items","filter","pop","tv","tvId","tomorrow","Date","setHours","getHours","time","patch","updateUser","res","getInputValue","parseFloat","value","getPrice","calcTotalPrice","price","i","listDisplay","length","calculatePrice","basePrice","gameCount","getNumberOfGames","controllerCount","getNumberOfControllers","excludedGames","numberOfGames","defaultChecked","onChange","htmlFor","CheckedConsole","remove","CheckoutConsole","to","CheckedController","CheckoutController","obj","CheckedGame","CheckoutGames","Main","currentItems","removedItem","removeItem","isPicked","removeCheckOutItem","addedItem","addItem","checkout","main","currentData","newItem","deleteItem","indexOfDeletedItem","findIndex","splice","TvButton","TvImg","TvTitle","Tv","TvPage","updateTvAvailable","updateTV","updateTv","tvs","tvUpdated","fetchTvs","AccountPage","calcTimeLeft","date","distance","getTime","textTime","Math","floor","document","querySelector","innerHTML","setRentedItems","user","rented","renting","logOut","fetchUser","clearInterval","interval","username","RegisterPage","getUsername","getPassword","password","getName","getEmail","email","registerUser","post","register","x","catch","err","SignInPage","loginUser","logIn","setItem","Navbar","Footer","isLogin","PublicRoute","component","restricted","rest","render","PrivateRoute","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"8RAaeA,MAVf,SAAuBC,GACnB,OAEI,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,SAASC,GAAIF,EAAME,GAAIC,QAASH,EAAMI,QAArD,SCMGC,MAVf,WACI,OAEI,yBAAKJ,UAAU,kBCKRK,MARf,SAAsBN,GAClB,OACI,yBAAKC,UAAU,SACX,8BAAOD,EAAMO,SCmBVC,E,kDAtBX,WAAYR,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAUf,OACI,yBAAKR,UAAU,iBACX,yBAAKA,UAAU,UACX,qD,GAdKS,IAAMC,WC+BhBC,MA3Bf,SAAiBZ,GAAQ,IACbO,EAAwCP,EAAxCO,MAAOM,EAAiCb,EAAjCa,UAAWT,EAAsBJ,EAAtBI,OAE1B,OAFgDJ,EAAdc,UAElB,EAER,yBAAKb,UAAU,qBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAcM,MAAOA,IACrB,kBAAC,EAAD,CAAeL,GAAIW,EAAWT,OAAQA,MAOlD,yBAAKH,UAAU,qBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBACX,kBAAC,EAAD,CAAcM,MAAOA,IACrB,kBAAC,EAAD,CAAeL,GAAIW,EAAWT,OAAQA,O,OCvB/C,SAASW,EAAaC,GACzB,OAAO,SAAUC,GAEbA,EAAS,CACLC,KCWiB,iBDVjBC,QAASH,K,IEHfI,E,kDACF,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAQVqB,uBAAyB,SAACC,GACtB,IACMC,EAAO,CACTV,UAFOW,SAASF,EAAEG,OAAOvB,IAGzBY,WAAY,GAGhB,EAAKd,MAAM0B,cAAcH,IAhBV,EA4BnBI,kBAAoB,WAChB,EAAK3B,MAAMe,aAAa,EAAKN,MAAMiB,gBA7BpB,EA+BnBE,WAAa,WACT,EAAK5B,MAAM6B,QAAQC,KAAK,MA9BxB,EAAKrB,MAAQ,CACTsB,SAAU,GACVL,cAAe,EAAK1B,MAAMgC,gBAJf,E,gEAmCfC,KAAKjC,MAAMkC,kB,yCAEIC,EAAWC,GAC1B,GAAIA,EAAUL,WAAaE,KAAKxB,MAAMsB,SAAU,CAC5C,IAAIA,EAAWE,KAAKxB,MAAMsB,SAC1BE,KAAKI,SAAS,CAAEN,kBACb,GAAIK,EAAUV,gBAAkBO,KAAKxB,MAAMiB,cAAe,CAC7D,IAAIA,EAAgBO,KAAKxB,MAAMiB,cAC/BO,KAAKI,SAAS,CAAEX,kBAChBO,KAAKN,oBACLM,KAAKL,gB,+BAcH,IAAD,OACGG,EAAaE,KAAKxB,MAAlBsB,SACR,OACI,yBAAK9B,UAAU,iBACV8B,EAASO,KAAI,SAAAC,GAAa,OAAO,kBAAC,EAAD,CAASzB,UAAWyB,EAAQzB,UAAW0B,IAAKD,EAAQ1B,UAAWA,UAAW0B,EAAQ1B,UAAWN,MAAOgC,EAAQE,KAAMrC,OAAQ,EAAKiB,gC,gDAd7IqB,EAAWN,GACvC,OAAIM,EAAUX,WAAaK,EAAUL,SAC1B,CAAEA,SAAUW,EAAUX,UACtBW,EAAUV,eAAeW,MAAQP,EAAUV,cAAciB,KAChEJ,QAAQK,IAAI,gBACL,CAAElB,cAAegB,EAAUV,iBAE1B,S,GAzDMtB,IAAMC,WA+EjBkC,eAFS,SAAApC,GAAK,MAAK,CAAEsB,SAAUtB,EAAMsB,SAASA,SAAUC,eAAgBvB,EAAMsB,SAASC,kBAE9D,CAAEE,cCjFnC,WACH,OAAO,SAAUjB,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAGnCC,MAFmB,uCAGf,CACIC,OAAQ,MACRC,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAArB,GAAQ,OAAId,EAAS,CACvBC,KFnBa,gBEoBbC,QAASY,SDiEgCL,cC1DlD,SAAuBH,GAC1B,OAAO,SAAUN,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAEnCC,MADmB,uCAEf,CACIC,OAAQ,QACRK,KAAMC,KAAKC,UAAUlC,GACrB4B,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAb,GAAO,OAAItB,EAAS,CACtBC,KFzCc,iBE0CdC,QAASoB,SD0C+CxB,gBAAzD8B,CAAyEzB,GE3EzEsC,MARf,SAA0B1D,GACtB,OACI,yBAAKC,UAAU,aAAaC,GAAIF,EAAME,GAAIC,QAASH,EAAMI,QAAzD,QCMOuD,MARf,SAAyB3D,GACrB,OACI,yBAAKC,UAAU,SACX,8BAAOD,EAAMO,SCWVqD,MAXf,SAA+B5D,GAC3B,OACI,yBAAKC,UAAU,0BACX,kBAAC,EAAD,CAAiBM,MAAOP,EAAMO,QAC9B,yBAAKN,UAAU,kBACX,kBAAC,EAAD,CAAkBC,GAAIF,EAAM6D,aAAczD,OAAQJ,EAAMI,YCFzD0D,MANf,WACI,OACI,yBAAK7D,UAAU,oBCiBR8D,MAjBf,SAAoB/D,GAEhB,OAAIwB,SAASxB,EAAMc,WAAa,EACpB,yBAAKb,UAAU,wBACnB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAuBM,MAAOP,EAAMO,MAAOsD,aAAc7D,EAAM6D,aAAczD,OAAQJ,EAAMI,UAI/F,yBAAKH,UAAU,wBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAuBM,MAAOP,EAAMO,MAAOsD,aAAc7D,EAAM6D,aAAczD,OAAQJ,EAAMI,W,ICNjG4D,E,kDACF,WAAYhE,GAAQ,IAAD,8BACf,cAAMA,IAWViE,0BAA4B,SAAC3C,GACzB,IAEMC,EAAO,CACTsC,aAHOrC,SAASF,EAAEG,OAAOvB,IAIzBY,WAHU,EAAKL,MAAMyD,OAKzB,EAAKlE,MAAMmE,iBAAiB5C,IAnBb,EAsBnBK,WAAa,WACT,EAAK5B,MAAM6B,QAAQC,KAAK,MAvBT,EAyBnBH,kBAAoB,WAChB,EAAK3B,MAAMe,aAAa,EAAKN,MAAM0D,mBAxBnC,EAAK1D,MAAQ,CACTyD,MAAO,EACPE,YAAa,GACbD,iBAAkB,EAAKnE,MAAMqE,mBALlB,E,gEA6BfpC,KAAKjC,MAAMsE,qB,yCAEInC,EAAWC,GAC1B,GAAIA,EAAUgC,cAAgBnC,KAAKxB,MAAM2D,YAAa,CAClD,IAAIA,EAAcnC,KAAKxB,MAAM2D,YAC7BnC,KAAKI,SAAS,CAAE+B,qBACb,GAAIhC,EAAU+B,mBAAqBlC,KAAKxB,MAAM0D,iBAAkB,CACnE,IAAIA,EAAmBlC,KAAKxB,MAAM0D,iBAClClC,KAAKI,SAAS,CAAE8B,qBAChBlC,KAAKN,oBACLM,KAAKL,gB,+BAcH,IAAD,OAEGwC,EAAgBnC,KAAKxB,MAArB2D,YAER,OACI,yBAAKnE,UAAU,mBAEVmE,EAAY9B,KAAI,SAAAiC,GAAW,OAAO,kBAAC,EAAD,CAAYzD,UAAWyD,EAAMzD,UAAW0B,IAAK+B,EAAMV,aAAcA,aAAcU,EAAMV,aAActD,MAAOgE,EAAM9B,KAAMrC,OAAQ,EAAK6D,mC,gDAjBlJvB,EAAWN,GACvC,OAAIM,EAAU0B,cAAgBhC,EAAUgC,YAC7B,CAAEA,YAAa1B,EAAU0B,aACzB1B,EAAU2B,oBAAsBjC,EAAU+B,kBACjD5B,QAAQK,IAAI,iBACL,CAAEuB,iBAAkBzB,EAAU2B,oBAE7B,S,GAnDS3D,IAAMC,WA6EpBkC,eAFS,SAAApC,GAAK,MAAK,CAAE2D,YAAa3D,EAAM2D,YAAYA,YAAaC,kBAAmB5D,EAAM2D,YAAYC,qBAE7E,CAAEC,iBCrFnC,WACH,OAAO,SAAUrD,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAInCC,MAHmB,0CAIf,CACIC,OAAQ,MACRC,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAgB,GAAW,OAAInD,EAAS,CAC1BC,KTfgB,mBSgBhBC,QAASiD,SDoEmCD,iBC9DrD,SAA0B5C,GAC7B,OAAO,SAAUN,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAEnCC,MADmB,0CAEf,CACIC,OAAQ,QACRK,KAAMC,KAAKC,UAAUlC,GACrB4B,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAoB,GAAU,OAAIvD,EAAS,CACzBC,KTpCiB,oBSqCjBC,QAASqD,SD8CqDzD,gBAA/D8B,CAA+EmB,GE5E/ES,MARf,SAAoBzE,GAChB,OACI,yBAAKC,UAAU,cACX,8BAAOD,EAAMO,SCKVmE,MARf,SAAqB1E,GACjB,OACI,yBAAKC,UAAU,eAAeC,GAAIF,EAAME,GAAIC,QAASH,EAAMI,QAA3D,QCIOuE,MANf,WACI,OACI,yBAAK1E,UAAU,cCwBR2E,MAtBf,SAAc5E,GACV,OAAIA,EAAMc,UAAY,EAEd,yBAAKb,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC4E,EAAD,CAAWtE,MAAOP,EAAMO,QACxB,kBAACuE,EAAD,MACA,kBAACC,EAAD,CAAY7E,GAAIF,EAAMgF,OAAQ5E,OAAQJ,EAAMI,UAMpD,yBAAKH,UAAU,kBACX,kBAAC4E,EAAD,CAAWtE,MAAOP,EAAMO,QACxB,kBAACuE,EAAD,MACA,kBAACC,EAAD,CAAY7E,GAAIF,EAAMgF,OAAQ5E,OAAQJ,EAAMI,W,ICblD6E,E,kDACF,WAAYjF,GAAQ,IAAD,8BACf,cAAMA,IAOVkF,oBAAsB,SAAC5D,GACnB,IACMC,EAAO,CACTyD,OAFOxD,SAASF,EAAEG,OAAOvB,IAGzBY,WAAY,GAEhB,EAAKd,MAAMmF,WAAW5D,IAdP,EAiBnBK,WAAa,WACT,EAAK5B,MAAM6B,QAAQC,KAAK,MAlBT,EAoBnBH,kBAAoB,WAChB,EAAK3B,MAAMe,aAAa,EAAKN,MAAM0E,aAnBnC,EAAK1E,MAAQ,CACT2E,MAAO,GACPD,WAAY,EAAKnF,MAAMqF,aAJZ,E,+DAwBAlD,EAAWC,GAC1B,GAAIA,EAAUgD,QAAUnD,KAAKxB,MAAM2E,MAAO,CACtC,IAAIA,EAAQnD,KAAKxB,MAAM2E,MACvBnD,KAAKI,SAAS,CAAE+C,eACb,GAAIhD,EAAU+C,aAAelD,KAAKxB,MAAM0E,WAAY,CACvD,IAAIA,EAAalD,KAAKxB,MAAM0E,WAC5BlD,KAAKI,SAAS,CAAE8C,eAChBlD,KAAKN,oBACLM,KAAKL,gB,0CAcTK,KAAKjC,MAAMsF,e,+BAEL,IAAD,OACGF,EAAUnD,KAAKxB,MAAf2E,MAER,OACI,yBAAKnF,UAAU,cACVmF,EAAM9C,KAAI,SAAAiD,GAAa,OAAO,kBAAC,EAAD,CAAMzE,UAAWyE,EAAQzE,UAAW0B,IAAK+C,EAAQP,OAAQA,OAAQO,EAAQP,OAAQzE,MAAOgF,EAAQ9C,KAAMrC,OAAQ,EAAK8E,6B,gDAjB9HxC,EAAWN,GACvC,OAAIM,EAAU0C,QAAUhD,EAAUgD,MACvB,CAAEA,MAAO1C,EAAU0C,OACnB1C,EAAU2C,cAAgBjD,EAAU+C,WACpC,CAAEA,WAAYzC,EAAU2C,aAEvB,S,GA3CI3E,IAAMC,WAmEfkC,eADS,SAAApC,GAAK,MAAK,CAAE2E,MAAO3E,EAAM2E,MAAMA,MAAOC,YAAa5E,EAAM2E,MAAMC,eAC/C,CAAEC,WCzEnC,WACH,OAAO,SAAUrE,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAGnCC,MAFmB,qCAGf,CACIC,OAAQ,MACRC,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAgC,GAAK,OAAInE,EAAS,CACpBC,KfbU,aecVC,QAASiE,SDyD6BD,WCnD/C,SAAoB5D,GACvB,OAAO,SAAUN,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAEnCC,MADmB,qCAEf,CACIC,OAAQ,QACRK,KAAMC,KAAKC,UAAUlC,GACrB4B,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAoC,GAAI,OAAIvE,EAAS,CACnBC,KflCW,cemCXC,QAASqE,SDmCyCzE,gBAAnD8B,CAAmEoC,GE7CrEQ,EAAO,I,6FA7BXC,EAAKnE,EAAMuB,GAEZ,OAAOG,MAAMyC,EACT,CACIxC,OAAQ,OACRK,KAAMC,KAAKC,UAAUlC,GACrB4B,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,Y,4BAI7BoC,EAAKnE,EAAMuB,GACb,OAAOG,MAAMyC,EAAK,CACdxC,OAAQ,QACRK,KAAMC,KAAKC,UAAUlC,GACrB4B,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGnBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,c,MC4MxBqC,E,kDAjOX,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAOV4F,KAAO,WACH,IAAM7D,EAAW,EAAKtB,MAAMoF,MAAMC,QAAO,SAAA9E,GAAI,OAAIA,EAAKH,aAAWyB,KAAI,SAAAtB,GAAU,OAAOA,EAAKyB,QAAQsD,MAC7F3B,EAAc,EAAK3D,MAAMoF,MAAMC,QAAO,SAAA9E,GAAI,OAAIA,EAAK6C,gBACnDuB,EAAQ,EAAK3E,MAAMoF,MAAMC,QAAO,SAAA9E,GAAI,OAAIA,EAAKgE,UAC7CgB,EAAK,EAAKvF,MAAMoF,MAAMC,QAAO,SAAA9E,GAAI,OAAIA,EAAKiF,QAAM3D,KAAI,SAAAtB,GAAU,OAAOA,EAAKyB,QAAQsD,MACxF3B,EAAY9B,KAAI,SAAAkC,GAAgB,MAAO,CAAEX,aAAcW,EAAWX,aAAcpB,KAAM+B,EAAW/B,SACjG,IAAMyD,EAAW,IAAIC,KACrBD,EAASE,SAASF,EAASG,WAA+B,GAAlB,EAAK5F,MAAM6F,MACnDlB,EAAM9C,KAAI,SAAAkD,GAAU,MAAO,CAAER,OAAQQ,EAAKR,OAAQvC,KAAM+C,EAAK/C,SAC7DF,QAAQK,IAAIoD,GCRM,SAACzE,EAAMuB,GAE7B,OAAO2C,EAAKc,MADO,oCACWhF,EAAMuB,GDehC0D,CARW,CACPjE,QAASR,EACTiE,GAAIA,EACJ5B,YAAaA,EACbgB,MAAOA,EACPkB,KAAMJ,GAEInD,aAAaC,QAAQ,gBAE9BI,MAAK,SAAAqD,GAAG,OAAIlE,QAAQK,IAAI,WAC7B,EAAK5C,MAAM4B,cA5BI,EA+BnB8E,cAAgB,SAACpF,GACb,EAAKe,SAAS,CAAEiE,KAAMK,WAAWrF,EAAEG,OAAOmF,UAhC3B,EAmCnBC,SAAW,SAAC3F,GACR,OAAQA,GACJ,IAAK,gBACD,OAAO,IACX,IAAK,gCACD,OAAO,KACX,IAAK,YACD,OAAO,IACX,IAAK,+BACD,OAAO,KACX,QACI,OAAO,MA9CA,EAiDnB4F,eAAiB,WAEb,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAI,EAAKC,cAAcC,OAAQF,IAC3CD,GAAS,EAAKI,eAAe,EAAKF,cAAcD,IAEpD,OAAOD,GAtDQ,EAyDnBI,eAAiB,SAAC5F,GACd,IAAM+E,EAAO,EAAK7F,MAAM6F,KAClBpF,EAAOK,EAAKkB,KACZ2E,EAAY,EAAKP,SAAS3F,GAC1BmG,EAAY,EAAKC,mBACjBC,EAAkB,EAAKC,yBAG7B,MAAa,KAATlB,EACIe,GAAa,GAAmB,MAAdD,EACX,EAEPC,EAAY,GAAmB,MAAdD,EACQ,KAAjBC,EAAY,GAAW,GAE/BE,GAAmB,GAAmB,MAAdH,EACjB,EAEPG,EAAkB,GAAmB,MAAdH,EACQ,KAAvBG,EAAkB,GAAW,GAElC/F,SAAqB,GAAZ4F,GAEF,IAATd,EACDe,GAAa,GAAmB,MAAdD,EACX,EAEPC,EAAY,GAAmB,MAAdD,EACQ,KAAjBC,EAAY,GAAW,EAE/BE,GAAmB,GAAmB,MAAdH,EACjB,EAEPG,EAAkB,GAAmB,MAAdH,EACQ,KAAvBG,EAAkB,GAAW,EAEtB,EAAZH,EAEO,IAATd,EACDe,GAAa,GAAmB,MAAdD,EACX,EAEPC,EAAY,GAAmB,MAAdD,EACQ,KAAjBC,EAAY,GAAW,EAE/BE,GAAmB,GAAmB,MAAdH,EACjB,EAEPG,EAAkB,GAAmB,MAAdH,EACQ,KAAvBG,EAAkB,GAAW,EAEtB,EAAZH,EAEO,IAATd,EACDe,GAAa,GAAmB,MAAdD,EACX,EAEPC,EAAY,GAAmB,MAAdD,EACQ,KAAjBC,EAAY,GAAW,EAAI,IAEnCE,GAAmB,GAAmB,MAAdH,EACjB,EAEPG,EAAkB,GAAmB,MAAdH,EACQ,KAAvBG,EAAkB,GAAW,EAAI,IAE1B,EAAZH,EAAgB,IAET,IAATd,EACDe,GAAa,GAAmB,MAAdD,EACX,EAEPC,EAAY,GAAmB,MAAdD,EACQ,KAAjBC,EAAY,GAAW,EAE/BE,GAAmB,GAAmB,MAAdH,EACjB,EAEPG,EAAkB,GAAmB,MAAdH,EACQ,KAAvBG,EAAkB,GAAW,EAEtB,EAAZH,OAbN,GA7HU,EA+InBI,uBAAyB,WAGrB,OAFiB,EAAK/G,MAAMoF,MACSC,QAAO,SAAA9E,GAAI,OAAIA,EAAK6C,gBAC9BqD,QAlJZ,EAoJnBI,iBAAmB,WAGf,OAFiB,EAAK7G,MAAMoF,MACGC,QAAO,SAAA9E,GAAI,OAAIA,EAAKgE,UAC9BkC,QAvJN,EAyJnBD,YAAc,WACV,IAAMQ,EAAgB,EAAKhH,MAAMoF,MAAMC,QAAO,SAAA9E,GAAI,OAAKA,EAAKgE,UACtD0C,EAAgB,EAAKJ,mBAC3B,GAAII,EAAgB,EAAG,CACnB,IAAMtC,EAAQ,CACV3C,KAAK,WAAD,OAAaiF,IAGrBD,EAAc3F,KAAKsD,GAGvB,OAAOqC,GAlKP,EAAKhH,MAAQ,CACToF,MAAO,GACPS,KAAM,IAJK,E,gEAwKfrE,KAAKI,SAAS,CAAEwD,MAAO5D,KAAKjC,MAAMuB,S,+BAE5B,IAAD,OACL,OACI,yBAAKtB,UAAU,iCACX,yBAAKA,UAAU,YACX,2CACA,8BACI,6BACI,2BAAOiB,KAAK,QAAQuB,KAAK,WAAWvC,GAAG,GAAGyH,gBAAc,EAACf,MAAM,MAAMgB,SAAU3F,KAAKyE,gBACpF,2BAAOmB,QAAQ,IAAf,QAEJ,6BACI,2BAAO3G,KAAK,QAAQuB,KAAK,WAAWvC,GAAG,GAAG0G,MAAM,IAAIgB,SAAU3F,KAAKyE,gBACnE,2BAAOmB,QAAQ,IAAf,QAEJ,6BACI,2BAAO3G,KAAK,QAAQuB,KAAK,WAAWvC,GAAG,GAAG0G,MAAM,IAAIgB,SAAU3F,KAAKyE,gBACnE,2BAAOmB,QAAQ,IAAf,OAEJ,6BACI,2BAAO3G,KAAK,QAAQuB,KAAK,WAAWvC,GAAG,GAAG0G,MAAM,IAAIgB,SAAU3F,KAAKyE,gBACnE,2BAAOmB,QAAQ,IAAf,OAEJ,6BACI,2BAAO3G,KAAK,QAAQuB,KAAK,WAAWvC,GAAG,GAAG0G,MAAM,IAAIgB,SAAU3F,KAAKyE,gBACnE,2BAAOmB,QAAQ,IAAf,SAKZ,yBAAK5H,UAAU,eACX,yBAAKA,UAAU,SACX,6CACA,wCAAUgC,KAAK6E,iBAAf,UAEJ,4BAEQ7E,KAAKgF,cACA3E,KAAI,SAACtB,EAAMgG,GACR,OAAQ,wBAAIxE,IAAKwE,GACb,0BAAM/G,UAAU,QAAQe,EAAKyB,MAC7B,0BAAMxC,UAAU,SAAS,EAAKkH,eAAenG,UAKrE,yBAAKf,UAAU,eAAeE,QAAS8B,KAAK2D,MAA5C,a,GAxNiBlF,IAAMC,WE4BxBmH,E,kDA5BX,WAAY9H,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDASf,OAEI,yBAAKR,UAAU,mBACX,yBAAKA,UAAU,aAAaC,GAAI+B,KAAKjC,MAAMuB,KAAKoB,IAAKxC,QAAS8B,KAAKjC,MAAM+H,QAAzE,UAGA,yBAAK9H,UAAU,qB,GAhBFS,IAAMC,WC4BpBqH,E,kDA1BX,WAAYhI,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAMf,OAAIwB,KAAKjC,MAAMuB,KAAK2F,OAAS,EAErB,yBAAKjH,UAAU,8BACX,kBAAC,EAAD,CAAgBsB,KAAMU,KAAKjC,MAAMuB,KAAK,GAAIwG,OAAQ9F,KAAKjC,MAAM+H,UAMrE,yBAAK9H,UAAU,8BACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CAAMgI,GAAG,WAAU,0C,GAlBTvH,IAAMC,WCsBrBuH,E,kDAtBX,WAAYlI,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAKf,OAEI,yBAAKR,UAAU,sBACX,yBAAKA,UAAU,aAAaC,GAAI+B,KAAKjC,MAAMuB,KAAKoB,IAAKxC,QAAS8B,KAAKjC,MAAM+H,QAAzE,UAGA,yBAAK9H,UAAU,wB,GAZCS,IAAMC,WC0BvBwH,E,kDAvBX,WAAYnI,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAQf,IAFM,IAAD,OACCc,EAASU,KAAKjC,MAAduB,KACGyF,EAAIzF,EAAK2F,OAAQF,EAAI,EAAGA,IAC7BzF,EAAKyF,GAAK,GAId,OACI,yBAAK/G,UAAU,iCACVsB,EAAKe,KAAI,SAAC8F,EAAKpB,GAAN,OAAYoB,EAAIvE,aAAe,kBAAE,EAAF,CAAoBtC,KAAM6G,EAAK5F,IAAKwE,EAAGe,OAAQ,EAAK/H,MAAM+H,SAAa,yBAAK9H,UAAU,sBAAsBuC,IAAKwE,GAAI,kBAAC,IAAD,CAAMiB,GAAG,cAAa,6C,GAhBnKvH,IAAMC,WCuBxB0H,E,kDAxBX,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAMf,OAEI,yBAAKR,UAAU,gBACX,yBAAKA,UAAU,aAAaC,GAAI+B,KAAKjC,MAAMuB,KAAKoB,IAAKxC,QAAS8B,KAAKjC,MAAM+H,QAAzE,UAGA,yBAAK9H,UAAU,kB,GAbLS,IAAMC,WCuBjB2H,E,kDArBX,WAAYtI,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAQf,IAFM,IAAD,OACCc,EAASU,KAAKjC,MAAduB,KACGyF,EAAIzF,EAAK2F,OAAQF,EAAI,EAAGA,IAC7BzF,EAAKyF,GAAK,GAEd,OACI,yBAAK/G,UAAU,4BACVsB,EAAKe,KAAI,SAAC8F,EAAKpB,GAAN,OAAYoB,EAAIpD,OAAS,kBAAE,EAAF,CAAczD,KAAM6G,EAAK5F,IAAKwE,EAAGe,OAAQ,EAAK/H,MAAM+H,SAAa,yBAAK9H,UAAU,iBAAiBuC,IAAKwE,GAAG,kBAAC,IAAD,CAAMiB,GAAG,SAAQ,6C,GAdjJvH,IAAMC,W,ICM5B4H,E,kDACF,WAAYvI,GAAQ,IAAD,8BACf,cAAMA,IAOV+H,OAAS,SAACzG,GACN,IAAMkH,EAAe,EAAKxI,MAAM6F,MAC1B4C,EAAcnH,EAAEG,OAAOvB,GAG7B,EAAKF,MAAM0I,WAAWF,EAAcC,GACpC,EAAKE,WACL,EAAK3I,MAAM4I,sBAfI,EAkBnBhH,WAAa,WACT,EAAK5B,MAAM6B,QAAQC,KAAK,aAjBxB,EAAKrB,MAAQ,CACT8B,QAAS,GACT6B,YAAa,GACbgB,MAAO,IALI,E,uDAsBf,IAAMrD,EAAWE,KAAKjC,MAAM6F,MAAMC,QAAO,SAAA/D,GAAQ,OAAIA,EAASlB,aAExDuD,EAAcnC,KAAKjC,MAAM6F,MAAMC,QAAO,SAAA1B,GAAW,OAAIA,EAAYP,gBAEjEuB,EAAQnD,KAAKjC,MAAM6F,MAAMC,QAAO,SAAAV,GAAK,OAAIA,EAAMJ,UAErD/C,KAAKI,SAAS,CAAEE,QAASR,EAAUqC,YAAaA,EAAagB,MAAOA,M,0CAMpE,IAAIoD,EAAevG,KAAKjC,MAAM6F,MAC9B,GAAI5D,KAAKjC,MAAMuC,QAAQ1B,UAAW,CAC9B,IAAMgI,EAAY5G,KAAKjC,MAAMuC,QAC7BN,KAAKjC,MAAM8I,QAAQN,EAAcK,GACjC5G,KAAK0G,WAET,GAAI1G,KAAKjC,MAAMwE,WAAWX,aAAc,CACpC,IAAMgF,EAAY5G,KAAKjC,MAAMwE,WAC7BvC,KAAKjC,MAAM8I,QAAQN,EAAcK,GACjC5G,KAAK0G,WAET,GAAI1G,KAAKjC,MAAMwF,KAAKR,OAAQ,CACxB,IAAM6D,EAAY5G,KAAKjC,MAAMwF,KAC7BvD,KAAKjC,MAAM8I,QAAQN,EAAcK,GACjC5G,KAAK0G,WAET,GAAI1G,KAAKjC,MAAMgG,GAAGC,KAAM,CACpB,IAAM4C,EAAY5G,KAAKjC,MAAMgG,GAC7B/D,KAAKjC,MAAM8I,QAAQN,EAAcK,GACjC5G,KAAK0G,c,+BAMH,IAAD,EACmC1G,KAAKxB,MAArC8B,EADH,EACGA,QAAS6B,EADZ,EACYA,YAAagB,EADzB,EACyBA,MAG9B,OACI,yBAAKnF,UAAU,QACX,kBAAC,EAAD,CAAiBsB,KAAMgB,EAASwF,OAAQ9F,KAAK8F,SAC7C,kBAAC,EAAD,CAAoBxG,KAAM6C,EAAa2D,OAAQ9F,KAAK8F,SACpD,kBAAC,EAAD,CAAexG,KAAM6D,EAAO2C,OAAQ9F,KAAK8F,SACzC,kBAAC,EAAD,CAAoBxG,KAAMU,KAAKjC,MAAM6F,MAAOjE,WAAYK,KAAKL,kB,GArE1DlB,IAAMC,WA+FVkC,eARS,SAAApC,GAAK,MAAK,CAC9B8B,QAAS9B,EAAMsI,SAAS/H,KACxBwD,WAAY/D,EAAMsI,SAAS/H,KAC3BwE,KAAM/E,EAAMsI,SAAS/H,KACrBgF,GAAIvF,EAAMsI,SAAS/H,KACnB6E,MAAOpF,EAAMuI,KAAKnD,SAGkB,CAAEiD,QCvGnC,SAAiBG,EAAaC,GACjC,OAAO,SAAUjI,GACb,IAAIM,EAAO0H,EACX1H,EAAKO,KAAKoH,GAGVjI,EAAS,CACLC,K1BMY,W0BLZC,QAJQI,MDmG+BmH,WC1F5C,SAAoBO,EAAaE,GACpC,OAAO,SAAUlI,GACb,IAAIM,EAAO0H,EACLG,EAAqB7H,EAAK8H,WAAU,SAAA9D,GAAO,OAAIA,EAAQ5C,MAAQwG,KACjEC,GAAsB,GACtB7H,EAAK+H,OAAOF,EAAoB,GAMpCnI,EAAS,CACLC,K1BXe,c0BYfC,QALUI,MDkFyCqH,mB1B5FxD,WACH,OAAO,SAAU3H,GAEbA,EAAS,CACLC,KCEwB,wBDDxBC,QAAS,Q0BuFN0B,CAAsE0F,GE9FtEgB,MARf,SAAkBvJ,GACd,OACI,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,SAASE,QAASH,EAAMI,OAAQF,GAAIF,EAAME,IAAzD,SCKGsJ,MATf,WACI,OAEI,yBAAKvJ,UAAU,aCORwJ,MAVf,SAAiBzJ,GACb,OAEI,yBAAKC,UAAU,SACX,8BAAOD,EAAMO,SC4BVmJ,MA3Bf,SAAY1J,GAER,OAAIA,EAAMc,UAAY,EAEd,yBAAKb,UAAU,gBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CAASM,MAAOP,EAAMO,QACtB,kBAAC,EAAD,CAAUH,OAAQJ,EAAMI,OAAQF,GAAIF,EAAMiG,SAOtD,yBAAKhG,UAAU,gBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACX,kBAAC,EAAD,CAASM,MAAOP,EAAMO,QACtB,kBAAC,EAAD,CAAUH,OAAQJ,EAAMI,OAAQF,GAAIF,EAAMiG,U,IClBpD0D,E,kDACF,WAAY3J,GAAQ,IAAD,8BACf,cAAMA,IAMV4J,kBAAoB,SAACtI,GACjB,IACMC,EAAO,CACT0E,KAFOzE,SAASF,EAAEG,OAAOvB,IAGzBY,WAAY,GAGhB,EAAKd,MAAM6J,SAAStI,IAdL,EAiBnBK,WAAa,WACT,EAAK5B,MAAM6B,QAAQC,KAAK,MAlBT,EAoBnBH,kBAAoB,WAChB,EAAK3B,MAAMe,aAAa,EAAKN,MAAMqJ,WAnBnC,EAAKrJ,MAAQ,CACTsJ,IAAK,GACLD,SAAU,EAAK9J,MAAMgK,WAJV,E,+DAwBA7H,EAAWC,GAC1B,GAAIA,EAAU2H,MAAQ9H,KAAKxB,MAAMsJ,IAAK,CAClC,IAAIA,EAAM9H,KAAKxB,MAAMsJ,IACrB9H,KAAKI,SAAS,CAAE0H,aACb,GAAI3H,EAAU0H,WAAa7H,KAAKxB,MAAMqJ,SAAU,CACnD,IAAIA,EAAW7H,KAAKxB,MAAMqJ,SAC1B7H,KAAKI,SAAS,CAAEyH,aAChB7H,KAAKN,oBACLM,KAAKL,gB,0CAcTK,KAAKjC,MAAMiK,a,+BAEL,IAAD,OACGF,EAAQ9H,KAAKxB,MAAbsJ,IACR,OACI,yBAAK9J,UAAU,WACV8J,EAAIzH,KAAI,SAAA0D,GAAQ,OAAO,kBAAC,EAAD,CAAIlF,UAAWkF,EAAGlF,UAAW0B,IAAKwD,EAAGC,KAAMA,KAAMD,EAAGC,KAAM1F,MAAOyF,EAAGvD,KAAMrC,OAAQ,EAAKwJ,2B,gDAhB3FlH,EAAWN,GACvC,OAAIM,EAAUqH,MAAQ3H,EAAU2H,IACrB,CAAEA,IAAKrH,EAAUqH,KACjBrH,EAAUsH,YAAc5H,EAAU0H,SAClC,CAAEA,SAAUpH,EAAUsH,WAErB,S,GA3CCtJ,IAAMC,WAmEZkC,eADS,SAAApC,GAAK,MAAK,CAAEsJ,IAAKtJ,EAAMsJ,IAAIA,IAAKC,UAAWvJ,EAAMsJ,IAAIC,aACrC,CAAEC,SCzEnC,WACH,OAAO,SAAUhJ,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAGnCC,MAFmB,kCAGf,CACIC,OAAQ,MACRC,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA2G,GAAG,OAAI9I,EAAS,CAClBC,KhCVQ,WgCWRC,QAAS4I,SDyD2BF,SClD7C,SAAkBtI,GACrB,OAAO,SAAUN,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAEnCC,MADmB,kCAEf,CACIC,OAAQ,QACRK,KAAMC,KAAKC,UAAUlC,GACrB4B,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA4C,GAAE,OAAI/E,EAAS,CACjBC,KhChCS,YgCiCTC,QAAS6E,SDkCqCjF,gBAA/C8B,CAA+D8G,G,IEtExEO,E,kDACF,WAAYlK,GAAQ,IAAD,8BACf,cAAMA,IAMVmK,aAAe,SAACC,GACZ,IAGIC,EAHkB,IAAIlE,KAAKiE,GAAME,WACzB,IAAInE,MAAOmE,UAGnBD,EAAW,IACXA,EAAW,GAEf,IAKME,EALKC,KAAKC,MAAMJ,EAAQ,OAKN,KAJZG,KAAKC,MAAOJ,EAAQ,MAAT,MAIgB,KAHzBG,KAAKC,MAAOJ,EAAQ,KAAT,KAG+B,KAF1CG,KAAKC,MAAOJ,EAAQ,IAAkB,KAEqB,KACzEK,SAASC,cAAc,cAAcC,UAAYL,GArBlC,EAuBnBM,eAAiB,SAACC,GACd,IAAIC,EAAS,GACb,GAAID,EAAKnI,IAAK,CACV,IAAMZ,EAAW+I,EAAKE,QAAQnF,MAAMtD,QAC9B6B,EAAc0G,EAAKE,QAAQnF,MAAMzB,YACjCgB,EAAQ0F,EAAKE,QAAQnF,MAAMT,MAC3BY,EAAK8E,EAAKE,QAAQnF,MAAMG,GAK9B,OAJA+E,EAAOjJ,KAAKC,GACZgJ,EAAOjJ,KAAKkE,GACZ5B,EAAY9B,KAAI,SAAAkC,GAAU,OAAIuG,EAAOjJ,KAAK0C,EAAW/B,SACrD2C,EAAM9C,KAAI,SAAAkD,GAAI,OAAIuF,EAAOjJ,KAAK0D,EAAK/C,SAC5BsI,EAAOzI,KAAI,SAACtB,EAAMgG,GAAQ,OAAQ,wBAAIxE,IAAKwE,GAAIhG,QAlC3C,EAqCnBiK,OAAS,WACLlI,aAAa2F,WAAW,eACxB,EAAK1I,MAAM6B,QAAQC,KAAK,MArCxB,EAAKrB,MAAQ,CACTqK,KAAM,GACNxE,KAAM,GAJK,E,gEA4CfrE,KAAKjC,MAAMkL,c,yCASI/I,EAAWC,GAC1B,GAAIA,EAAU0I,OAAS7I,KAAKxB,MAAMqK,KAAM,CACpC,IAAIA,EAAO7I,KAAKxB,MAAMqK,KACtB7I,KAAKI,SAAS,CAAEyI,SAChB7I,KAAKkI,aAAalI,KAAKxB,MAAMqK,KAAKE,QAAQ1E,S,6CAc9C6E,cAAclJ,KAAKmJ,Y,+BAIb,IACEN,EAAS7I,KAAKxB,MAAdqK,KAER,OACI,yBAAK7K,UAAU,gBAEX,yBAAKA,UAAU,gBACX,mDACA,6BACI,uCACA,8BAAO6K,EAAKrI,OAEhB,6BACI,2CACA,8BAAOqI,EAAKO,WAEhB,6BACI,2CACA,uCACA,0BAAMpL,UAAU,eAAhB,oBAEJ,yBAAKA,UAAU,SAASE,QAAS8B,KAAKgJ,QAAtC,YAKJ,yBAAKhL,UAAU,iBACX,uCACA,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAEnB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,gBACX,iDACA,4BACKgC,KAAK4I,eAAe5I,KAAKxB,MAAMqK,QAGxC,yBAAK7K,UAAU,aACX,yBAAKA,UAAU,WACX,0BAAMA,UAAU,qB,gDA1DRyC,EAAWN,GACvC,OAAIM,EAAUoI,OAAS1I,EAAU0I,KACtB,CAAEA,KAAMpI,EAAUoI,MAEjB,S,GAlEMpK,IAAMC,WAyIjBkC,eAFS,SAAApC,GAAK,MAAK,CAAEqK,KAAMrK,EAAMqK,KAAKA,QAEb,CAAEI,UC5InC,WACH,OAAO,SAAUjK,GACb,IAAM6B,EAAQC,aAAaC,QAAQ,eAInCC,MAHmB,oCAIf,CACIC,OAAQ,MACRC,QAAS,CACL,aAAa,GAAb,OAAiBL,GACjB,eAAgB,sBAGvBM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA0H,GAAI,OAAI7J,EAAS,CACnBC,KlCPU,mBkCQVC,QAAS2J,UD2HVjI,CAAwCqH,GEzExCoB,E,kDAhEX,WAAYtL,GAAQ,IAAD,8BACf,cAAMA,IASVuL,YAAc,SAACjK,GACX,EAAKe,SAAS,CAAEgJ,SAAU/J,EAAEG,OAAOmF,SAXpB,EAanB4E,YAAc,SAAClK,GACX,EAAKe,SAAS,CAAEoJ,SAAUnK,EAAEG,OAAOmF,SAdpB,EAiBnB8E,QAAU,SAACpK,GACP,EAAKe,SAAS,CAAEI,KAAMnB,EAAEG,OAAOmF,SAlBhB,EAqBnB+E,SAAW,SAACrK,GACR,EAAKe,SAAS,CAAEuJ,MAAOtK,EAAEG,OAAOmF,SAtBjB,EA0BnBiF,aAAe,YjBxBK,SAACtK,GAErB,OAAOkE,EAAKqG,KADO,6CACUvK,IiB6BzBwK,CANW,CACPV,SAAU,EAAK5K,MAAM4K,SACrBI,SAAU,EAAKhL,MAAMgL,SACrBG,MAAO,EAAKnL,MAAMmL,MAClBnJ,KAAM,EAAKhC,MAAMgC,OAGhBW,MAAK,SAAAC,GAAQ,OAAId,QAAQK,IAAIS,MAC7BD,MAAK,SAAA4I,GAAC,OAAI,EAAKhM,MAAM6B,QAAQC,KAAK,eAClCmK,OAAM,SAAAC,GAAG,OAAI3J,QAAQK,IAAIsJ,OAlC9B,EAAKzL,MAAQ,CACT4K,SAAU,GACVI,SAAU,GACVhJ,KAAM,GACNmJ,MAAO,IANI,E,qDAwCf,OACI,yBAAK3L,UAAU,sBACX,yBAAKA,UAAU,YACX,wCACA,2BAAO4H,QAAQ,QAAf,QACA,2BAAO3G,KAAK,OAAOuB,KAAK,OAAOvC,GAAG,OAAO0H,SAAU3F,KAAKyJ,UACxD,2BAAO7D,QAAQ,SAAf,SACA,2BAAO3G,KAAK,QAAQuB,KAAK,QAAQvC,GAAG,QAAQ0H,SAAU3F,KAAK0J,WAC3D,2BAAO9D,QAAQ,YAAf,YACA,2BAAO3G,KAAK,OAAOuB,KAAK,WAAWvC,GAAG,WAAW0H,SAAU3F,KAAKsJ,cAChE,2BAAO1D,QAAQ,YAAf,YACA,2BAAO3G,KAAK,WAAWuB,KAAK,WAAWvC,GAAG,WAAW0H,SAAU3F,KAAKuJ,cACpE,yBAAKvL,UAAU,eAAeE,QAAS8B,KAAK4J,cACxC,2CAGJ,kBAAC,IAAD,CAAM5D,GAAG,YAAT,sB,GAzDOvH,IAAMC,WC8ClBwL,E,kDA/CX,WAAYnM,GAAQ,IAAD,8BACf,cAAMA,IAOVuL,YAAc,SAACjK,GACX,EAAKe,SAAS,CAAEgJ,SAAU/J,EAAEG,OAAOmF,SATpB,EAWnB4E,YAAc,SAAClK,GACX,EAAKe,SAAS,CAAEoJ,SAAUnK,EAAEG,OAAOmF,SAZpB,EAenBwF,UAAY,YlBjBK,SAAC7K,GAElB,OAAOkE,EAAKqG,KADO,0CACUvK,IkBoBzB8K,CAJW,CACPhB,SAAU,EAAK5K,MAAM4K,SACrBI,SAAU,EAAKhL,MAAMgL,WAGpBrI,MAAK,SAAAC,GAAQ,OAAIN,aAAauJ,QAAQ,cAAejJ,MACrDD,MAAK,SAAA4I,GAAC,OAAI,EAAKhM,MAAM6B,QAAQC,KAAK,QAClCmK,OAAM,SAAAC,GAAG,OAAI3J,QAAQK,IAAIsJ,OArB9B,EAAKzL,MAAQ,CACT4K,SAAU,GACVI,SAAU,IAJC,E,qDA2Bf,OACI,yBAAKxL,UAAU,qBACX,yBAAKA,UAAU,WACX,uCACA,2BAAO4H,QAAQ,YAAf,YACA,2BAAO3G,KAAK,OAAOuB,KAAK,WAAWvC,GAAG,WAAW0H,SAAU3F,KAAKsJ,cAChE,2BAAO1D,QAAQ,YAAf,YACA,2BAAO3G,KAAK,WAAWuB,KAAK,WAAWvC,GAAG,WAAW0H,SAAU3F,KAAKuJ,cACpE,yBAAKvL,UAAU,cAAcE,QAAS8B,KAAKmK,WACvC,0CAGJ,kBAAC,IAAD,CAAMnE,GAAG,aAAT,uB,GAxCKvH,IAAMC,WCyBhB4L,G,kDAzBX,WAAYvM,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAQf,OACI,yBAAKR,UAAU,UACX,4BACI,4BAAI,kBAAC,IAAD,CAAMgI,GAAG,YAAT,YACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,eAAT,eACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,KAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,UAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,OAAT,a,GAhBHvH,IAAMC,WC6BZ6L,G,kDA5BX,WAAYxM,GAAQ,IAAD,8BACf,cAAMA,IACDS,MAAQ,GAFE,E,qDAUf,OACI,yBAAKR,UAAU,UACX,yBAAKA,UAAU,aACX,iDAEJ,yBAAKA,UAAU,WACX,kBAAC,IAAD,CAAMgI,GAAG,YACL,uBAAGhI,UAAU,sBACb,gD,GAnBHS,IAAMC,W,iBCHd8L,GAAU,WACnB,QAAI1J,aAAaC,QAAQ,gBCed0J,GAZK,SAAC,GAAmD,IAAtC/L,EAAqC,EAAhDgM,UAAsBC,EAA0B,EAA1BA,WAAeC,EAAW,2CACnE,OAGI,kBAAC,KAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAA9M,GAAK,OAC1ByM,MAAaG,EACT,kBAAC,KAAD,CAAU3E,GAAG,eACX,kBAACtH,EAAeX,QCMnB+M,GAbM,SAAC,GAAuC,IAA1BpM,EAAyB,EAApCgM,UAAyBE,EAAW,8BACxD,OAII,kBAAC,KAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAA9M,GAAK,OAC1ByM,KACI,kBAAC9L,EAAcX,GACb,kBAAC,KAAD,CAAUiI,GAAG,kB,0BCVzB+E,GAAe,CACjBjL,SAAU,GACVC,eAAgB,ICFdgL,GAAe,CACjB5I,YAAa,GACbC,kBAAmB,ICFjB2I,GAAe,CACjB5H,MAAO,GACPC,YAAa,ICFX2H,GAAe,CACjBjD,IAAK,GACLC,UAAW,ICDTgD,GAAe,CACjBlC,KAAM,ICDJkC,GAAe,CACjBnH,MAAO,ICDLmH,GAAe,CACjBhM,KAAM,ICOKiM,gBACX,CACIlL,SPNO,WAAyC,IAA/BtB,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,I1CTqB,gB0CUjB,OAAO,6BACAT,GADP,IAEIsB,SAAUmL,EAAO/L,UAEzB,I1CbsB,iB0CclB,OAAO,6BACAV,GADP,IAEIuB,eAAgBkL,EAAO/L,UAE/B,QACI,OAAOV,IONX2D,YNPO,WAAyC,IAA/B3D,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,I3CNwB,mB2COpB,OAAO,6BACAT,GADP,IAEI2D,YAAa8I,EAAO/L,UAE5B,I3CVyB,oB2CWrB,OAAO,6BACAV,GADP,IAEI4D,kBAAmB6I,EAAO/L,UAElC,QACI,OAAOV,IMLX2E,MLRO,WAAyC,IAA/B3E,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,I5CHkB,a4CId,OAAO,6BACAT,GADP,IAEI2E,MAAO8H,EAAO/L,UAEtB,I5CPmB,c4CQf,OAAO,6BACAV,GADP,IAEI4E,YAAa6H,EAAO/L,UAE5B,QACI,OAAOV,IKJXsJ,IJTO,WAAyC,IAA/BtJ,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,I7CAgB,W6CCZ,OAAO,6BACAT,GADP,IAEIsJ,IAAKmD,EAAO/L,UAEpB,I7CJiB,Y6CKb,OAAO,6BACAV,GADP,IAEIuJ,UAAWkD,EAAO/L,UAE1B,QACI,OAAOV,IIHXqK,KHVO,WAAyC,IAA/BrK,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,I9CIkB,mB8CHd,OAAO,6BACAT,GADP,IAEIqK,KAAMoC,EAAO/L,UAErB,QACI,OAAOV,IGGXuI,KFXO,WAAyC,IAA/BvI,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,I/COgB,W+CFhB,I/CGmB,c+CFf,OAAO,6BACAT,GADP,IAEIoF,MAAOqH,EAAO/L,UAEtB,QACI,OAAOV,IEDXsI,SDZO,WAAyC,IAA/BtI,EAA8B,uDAAtBuM,GAAcE,EAAQ,uCACnD,OAAQA,EAAOhM,MACX,IhDUqB,iBgDLrB,IhDM4B,wBgDLxB,OAAO,6BACAT,GADP,IAEIO,KAAMkM,EAAO/L,UAErB,QACI,OAAOV,MEdb0M,GAAa,CAACC,MAOLC,GAJDC,aAAYC,GALL,GAKgCC,aAAQC,KAAe,WAAf,EAAmBN,MCkDjEO,G,kDAjCb,WAAY1N,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,GAFI,E,qDASjB,OACE,kBAAC,IAAD,CAAU4M,MAAOA,IACf,yBAAKpN,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,GAAD,CAAc0M,UAAWpE,EAAMoF,KAAK,IAAIC,OAAK,IAC7C,kBAAC,GAAD,CAAcjB,UAAWzC,EAAayD,KAAK,WAAWC,OAAK,IAC3D,kBAAC,GAAD,CAAcjB,UAAWvL,EAAauM,KAAK,WAAWC,OAAK,IAC3D,kBAAC,GAAD,CAAcjB,UAAW3I,EAAgB2J,KAAK,cAAcC,OAAK,IACjE,kBAAC,GAAD,CAAcjB,UAAW1H,EAAW0I,KAAK,SAASC,OAAK,IACvD,kBAAC,GAAD,CAAcjB,UAAWhD,EAAQgE,KAAK,MAAMC,OAAK,IACjD,kBAAC,GAAD,CAAahB,YAAY,EAAMD,UAAWR,EAAYwB,KAAK,WAAWC,OAAK,IAC3E,kBAAC,GAAD,CAAahB,YAAY,EAAMD,UAAWrB,EAAcqC,KAAK,YAAYC,OAAK,KAEhF,kBAAC,GAAD,Y,GAxBQlN,IAAMC,WCbJkN,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASpB,OACP,kBAAC,IAAMqB,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJzD,SAAS0D,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnL,MAAK,SAAAoL,GACJA,EAAaC,gBAEdxC,OAAM,SAAAyC,GACLnM,QAAQmM,MAAMA,EAAMC,c","file":"static/js/main.5a874b04.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction ConsoleButton(props) {\r\n    return (\r\n\r\n        <div className=\"btn-container\">\r\n            <div className=\"button\" id={props.id} onClick={props.update}>Add</div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ConsoleButton;\r\n","import React from 'react';\r\n\r\n\r\nfunction ConsoleImg() {\r\n    return (\r\n\r\n        <div className=\"console-img \">\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ConsoleImg;\r\n","import React from 'react';\r\n\r\n\r\nfunction ConsoleTitle(props) {\r\n    return (\r\n        <div className=\"title\">\r\n            <span>{props.title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ConsoleTitle;\r\n","import React from 'react';\r\n\r\nclass OutOfStock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"not-available\">\r\n                <div className=\"ribbon\">\r\n                    <span>NOT AVAILABLE</span>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default OutOfStock;\r\n","import React from 'react';\r\nimport ConsoleButton from './ConsoleButton';\r\nimport ConsoleImg from './ConsoleImg';\r\nimport ConsoleTitle from './ConsoleTitle';\r\nimport OutOfStock from '../OutOfStock';\r\n\r\nfunction Console(props) {\r\n    const { title, consoleId, update, available } = props\r\n\r\n    if (available < 0) {\r\n        return (\r\n            <div className=\"console-container\">\r\n                <OutOfStock></OutOfStock>\r\n                <ConsoleImg />\r\n                <div className=\"console-description\">\r\n                    <ConsoleTitle title={title} />\r\n                    <ConsoleButton id={consoleId} update={update} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"console-container\">\r\n            <ConsoleImg />\r\n            <div className=\"console-description\">\r\n                <ConsoleTitle title={title} />\r\n                <ConsoleButton id={consoleId} update={update} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Console;\r\n","import { CHECKOUT_ITEM, REMOVE_CHECKOUT_ITEM } from './type';\r\n\r\n\r\n\r\nexport function checkOutItem(item) {\r\n    return function (dispatch) {\r\n\r\n        dispatch({\r\n            type: CHECKOUT_ITEM,\r\n            payload: item\r\n        })\r\n    }\r\n}\r\n\r\nexport function removeCheckOutItem() {\r\n    return function (dispatch) {\r\n\r\n        dispatch({\r\n            type: REMOVE_CHECKOUT_ITEM,\r\n            payload: {}\r\n        })\r\n    }\r\n}\r\n","export const FETCH_CONSOLE = 'FETCH_CONSOLE';\r\nexport const UPDATE_CONSOLE = 'UPDATE_CONSOLE';\r\n\r\nexport const FETCH_CONTROLLER = 'FETCH_CONTROLLER';\r\nexport const UPDATE_CONTROLLER = 'UPDATE_CONTROLLER';\r\n\r\nexport const FETCH_GAME = 'FETCH_GAME';\r\nexport const UPDATE_GAME = 'UPDATE_GAME';\r\n\r\nexport const FETCH_TV = 'FETCH_TV';\r\nexport const UPDATE_TV = 'UPDATE_TV';\r\n\r\n\r\nexport const FETCH_USER = 'FETCH_FETCH_USER';\r\n\r\n\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\"\r\n\r\nexport const CHECKOUT_ITEM = ' CHECKOUT_ITEM';\r\nexport const REMOVE_CHECKOUT_ITEM = ' REMOVE_CHECKOUT_ITEM';\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Console from '../components/console-page/Console';\r\nimport { connect } from 'react-redux';\r\nimport { fetchConsoles, updateConsole } from '../actions/consoleActions'\r\nimport { checkOutItem } from '../actions/addAction'\r\nclass ConsolePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            consoles: [],\r\n            updateConsole: this.props.consoleUpdated\r\n        }\r\n    }\r\n\r\n\r\n    updateConsoleAvailable = (e) => {\r\n        const id = parseInt(e.target.id)\r\n        const data = {\r\n            consoleId: id,\r\n            available: -1\r\n        }\r\n\r\n        this.props.updateConsole(data)\r\n\r\n        // const writeCheckOutItem = () => {\r\n        //     this.props.checkOutItem(this.props.consoleUpdated)\r\n        // }\r\n        // const changePage = () => {\r\n        //     this.props.history.push('/')\r\n        // }\r\n        // setTimeout(writeCheckOutItem, 1000);\r\n        // setTimeout(changePage, 1100);\r\n\r\n    }\r\n    writeCheckOutItem = () => {\r\n        this.props.checkOutItem(this.state.updateConsole)\r\n    }\r\n    changePage = () => {\r\n        this.props.history.push('/')\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchConsoles()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.consoles !== this.state.consoles) {\r\n            let consoles = this.state.consoles\r\n            this.setState({ consoles });\r\n        } else if (prevState.updateConsole !== this.state.updateConsole) {\r\n            let updateConsole = this.state.updateConsole\r\n            this.setState({ updateConsole });\r\n            this.writeCheckOutItem()\r\n            this.changePage()\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.consoles !== prevState.consoles) {\r\n            return { consoles: nextProps.consoles };\r\n        } else if (nextProps.consoleUpdated._id !== prevState.updateConsole._id) {\r\n            console.log(\"update state\");\r\n            return { updateConsole: nextProps.consoleUpdated };\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n        const { consoles } = this.state\r\n        return (\r\n            <div className=\"console-page \" >\r\n                {consoles.map(console => { return <Console available={console.available} key={console.consoleId} consoleId={console.consoleId} title={console.name} update={this.updateConsoleAvailable} /> })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nConsolePage.propTypes = {\r\n    fetchConsoles: PropTypes.func.isRequired,\r\n    updateConsole: PropTypes.func.isRequired,\r\n    checkOutItem: PropTypes.func.isRequired,\r\n    consoles: PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ consoles: state.consoles.consoles, consoleUpdated: state.consoles.consoleUpdated })\r\n\r\nexport default connect(mapStateToProps, { fetchConsoles, updateConsole, checkOutItem })(ConsolePage);\r\n","import { FETCH_CONSOLE, UPDATE_CONSOLE } from './type';\r\n\r\n\r\n\r\nexport function fetchConsoles() {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/console';\r\n\r\n        fetch(requestURL,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(consoles => dispatch({\r\n                type: FETCH_CONSOLE,\r\n                payload: consoles\r\n            }))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function updateConsole(data) {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/console';\r\n        fetch(requestURL,\r\n            {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(console => dispatch({\r\n                type: UPDATE_CONSOLE,\r\n                payload: console\r\n            }))\r\n    }\r\n}","import React from 'react';\r\n\r\nfunction ControllerButton(props) {\r\n    return (\r\n        <div className=\"add-button\" id={props.id} onClick={props.update}>\r\n            Add\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControllerButton;\r\n","import React from 'react';\r\n\r\nfunction ControllerTitle(props) {\r\n    return (\r\n        <div className=\"title\">\r\n            <span>{props.title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControllerTitle;\r\n","import React from 'react';\r\nimport ControllerButton from './ControllerButton';\r\nimport ControllerTitle from './ControllerTitle';\r\n\r\n\r\nfunction ControllerDescription(props) {\r\n    return (\r\n        <div className=\"controller-description\">\r\n            <ControllerTitle title={props.title} />\r\n            <div className=\"add-controller\">\r\n                <ControllerButton id={props.controllerId} update={props.update} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControllerDescription;\r\n","import React from 'react';\r\n\r\nfunction ControllerImg() {\r\n    return (\r\n        <div className=\"controller-img\"></div>\r\n    );\r\n}\r\n\r\nexport default ControllerImg;\r\n","import React from 'react';\r\nimport ControllerDescription from './ControllerDescription';\r\nimport ControllerImg from './ControllerImg';\r\nimport OutOfStock from '../OutOfStock'\r\nfunction Controller(props) {\r\n\r\n    if (parseInt(props.available) < 0) {\r\n        return (<div className=\"controller-container\">\r\n            <OutOfStock></OutOfStock>\r\n            <ControllerImg />\r\n            <ControllerDescription title={props.title} controllerId={props.controllerId} update={props.update} />\r\n        </div>)\r\n    }\r\n    return (\r\n        <div className=\"controller-container\">\r\n            <ControllerImg />\r\n            <ControllerDescription title={props.title} controllerId={props.controllerId} update={props.update} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Controller;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Controller from '../components/controller-page/Controller';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchControllers, updateController } from '../actions/controllerActions';\r\nimport { checkOutItem } from '../actions/addAction';\r\n\r\n\r\n\r\nclass ControllerPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            count: 1,\r\n            controllers: [],\r\n            updateController: this.props.controllerUpdated\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    updateControllerAvailable = (e) => {\r\n        const id = parseInt(e.target.id)\r\n        const count = this.state.count\r\n        const data = {\r\n            controllerId: id,\r\n            available: -count\r\n        }\r\n        this.props.updateController(data)\r\n    }\r\n\r\n    changePage = () => {\r\n        this.props.history.push('/')\r\n    }\r\n    writeCheckOutItem = () => {\r\n        this.props.checkOutItem(this.state.updateController)\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchControllers()\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.controllers !== this.state.controllers) {\r\n            let controllers = this.state.controllers\r\n            this.setState({ controllers });\r\n        } else if (prevState.updateController !== this.state.updateController) {\r\n            let updateController = this.state.updateController\r\n            this.setState({ updateController });\r\n            this.writeCheckOutItem()\r\n            this.changePage()\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.controllers !== prevState.controllers) {\r\n            return { controllers: nextProps.controllers };\r\n        } else if (nextProps.controllerUpdated !== prevState.updateController) {\r\n            console.log(\"updated state\");\r\n            return { updateController: nextProps.controllerUpdated };\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { controllers } = this.state\r\n\r\n        return (\r\n            <div className=\"controller-page\" >\r\n\r\n                {controllers.map(contr => { return <Controller available={contr.available} key={contr.controllerId} controllerId={contr.controllerId} title={contr.name} update={this.updateControllerAvailable} /> })}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nControllerPage.propTypes = {\r\n    fetchControllers: PropTypes.func.isRequired,\r\n    updateController: PropTypes.func.isRequired,\r\n    checkOutItem: PropTypes.func.isRequired,\r\n    controllerUpdated: PropTypes.object,\r\n    controllers: PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state => ({ controllers: state.controllers.controllers, controllerUpdated: state.controllers.controllerUpdated })\r\n\r\nexport default connect(mapStateToProps, { fetchControllers, updateController, checkOutItem })(ControllerPage);\r\n","import { FETCH_CONTROLLER, UPDATE_CONTROLLER } from './type';\r\n\r\nexport function fetchControllers() {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/controller';\r\n\r\n\r\n        fetch(requestURL,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(controllers => dispatch({\r\n                type: FETCH_CONTROLLER,\r\n                payload: controllers\r\n            }))\r\n\r\n    }\r\n}\r\n\r\nexport function updateController(data) {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/controller';\r\n        fetch(requestURL,\r\n            {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(controller => dispatch({\r\n                type: UPDATE_CONTROLLER,\r\n                payload: controller\r\n            }))\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nfunction GamesTitle(props) {\r\n    return (\r\n        <div className=\"game-title\">\r\n            <span>{props.title}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GamesTitle;\r\n","import React from 'react';\r\n\r\n\r\nfunction GamesButton(props) {\r\n    return (\r\n        <div className=\"add-game-btn\" id={props.id} onClick={props.update}>\r\n            Add\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GamesButton;\r\n","import React from 'react';\r\n\r\n\r\nfunction GamesImg() {\r\n    return (\r\n        <div className=\"game-img\"></div>\r\n    );\r\n}\r\n\r\nexport default GamesImg;\r\n","import React from 'react';\r\nimport GameTitle from './GameTitle';\r\nimport GameButton from './GameButton';\r\nimport GameImg from './GameImg';\r\nimport OutOfStock from '../OutOfStock';\r\n\r\n\r\nfunction Game(props) {\r\n    if (props.available < 0) {\r\n        return (\r\n            <div className=\"game-container\">\r\n                <OutOfStock></OutOfStock>\r\n                <GameTitle title={props.title} />\r\n                <GameImg />\r\n                <GameButton id={props.gameId} update={props.update} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"game-container\">\r\n            <GameTitle title={props.title} />\r\n            <GameImg />\r\n            <GameButton id={props.gameId} update={props.update} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Game from '../components/games-page/Game';\r\n\r\n\r\nimport { connect } from 'react-redux';\r\nimport { fetchGames, updateGame } from \"../actions/gamesActions\"\r\nimport { checkOutItem } from '../actions/addAction';\r\n\r\nclass GamesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            games: [],\r\n            updateGame: this.props.gameUpdated\r\n        }\r\n    }\r\n\r\n    updateGameAvailable = (e) => {\r\n        const id = parseInt(e.target.id)\r\n        const data = {\r\n            gameId: id,\r\n            available: -1\r\n        }\r\n        this.props.updateGame(data)\r\n    }\r\n\r\n    changePage = () => {\r\n        this.props.history.push('/')\r\n    }\r\n    writeCheckOutItem = () => {\r\n        this.props.checkOutItem(this.state.updateGame)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.games !== this.state.games) {\r\n            let games = this.state.games\r\n            this.setState({ games });\r\n        } else if (prevState.updateGame !== this.state.updateGame) {\r\n            let updateGame = this.state.updateGame\r\n            this.setState({ updateGame });\r\n            this.writeCheckOutItem()\r\n            this.changePage()\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.games !== prevState.games) {\r\n            return { games: nextProps.games };\r\n        } else if (nextProps.gameUpdated !== prevState.updateGame) {\r\n            return { updateGame: nextProps.gameUpdated };\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchGames()\r\n    }\r\n    render() {\r\n        const { games } = this.state\r\n\r\n        return (\r\n            <div className=\"games-page\" >\r\n                {games.map(element => { return <Game available={element.available} key={element.gameId} gameId={element.gameId} title={element.name} update={this.updateGameAvailable} /> })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nGamesPage.propTypes = {\r\n    fetchGames: PropTypes.func.isRequired,\r\n    updateGame: PropTypes.func.isRequired,\r\n    checkOutItem: PropTypes.func.isRequired,\r\n    gameUpdated: PropTypes.object,\r\n    games: PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state => ({ games: state.games.games, gameUpdated: state.games.gameUpdated })\r\nexport default connect(mapStateToProps, { fetchGames, updateGame, checkOutItem })(GamesPage);\r\n","import { FETCH_GAME, UPDATE_GAME } from './type';\r\n\r\n\r\n\r\nexport function fetchGames() {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/games';\r\n\r\n        fetch(requestURL,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(games => dispatch({\r\n                type: FETCH_GAME,\r\n                payload: games\r\n            }))\r\n\r\n    }\r\n}\r\n\r\nexport function updateGame(data) {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/games';\r\n        fetch(requestURL,\r\n            {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(game => dispatch({\r\n                type: UPDATE_GAME,\r\n                payload: game\r\n            }))\r\n    }\r\n}","class HttpServices {\r\n\r\n\r\n    post(url, data, token) {\r\n\r\n        return fetch(url,\r\n            {\r\n                method: \"POST\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n\r\n    };\r\n\r\n    patch(url, data, token) {\r\n        return fetch(url, {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'auth-token': `${token}`,\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n    }\r\n\r\n}\r\n\r\nexport const http = new HttpServices()","import React from 'react';\r\n\r\nimport { updateUser } from '../../services/UserServices';\r\n\r\n\r\nclass CheckoutCalculator extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            time: 0.5\r\n        }\r\n    }\r\n\r\n    rent = () => {\r\n        const consoles = this.state.items.filter(item => item.consoleId).map(item => { return item.name }).pop()\r\n        const controllers = this.state.items.filter(item => item.controllerId)\r\n        const games = this.state.items.filter(item => item.gameId)\r\n        const tv = this.state.items.filter(item => item.tvId).map(item => { return item.name }).pop()\r\n        controllers.map(controller => { return { controllerId: controller.controllerId, name: controller.name } })\r\n        const tomorrow = new Date();\r\n        tomorrow.setHours(tomorrow.getHours() + this.state.time * 24);\r\n        games.map(game => { return { gameId: game.gameId, name: game.name } })\r\n        console.log(tv);\r\n        let data = {\r\n            console: consoles,\r\n            tv: tv,\r\n            controllers: controllers,\r\n            games: games,\r\n            time: tomorrow\r\n        }\r\n        const token = localStorage.getItem(\"currentUser\")\r\n        updateUser(data, token)\r\n            .then(res => console.log(\"done\"))\r\n        this.props.changePage()\r\n    }\r\n\r\n    getInputValue = (e) => {\r\n        this.setState({ time: parseFloat(e.target.value) })\r\n    }\r\n\r\n    getPrice = (type) => {\r\n        switch (type) {\r\n            case \"PlayStation 5\":\r\n                return 2000\r\n            case \"PlayStation 5 Digital Edition\":\r\n                return 2500\r\n            case \"DualSense\":\r\n                return 200\r\n            case \"LG 55'' 4K HDR Smart OLED TV\":\r\n                return 2500\r\n            default:\r\n                return 100\r\n        }\r\n    }\r\n    calcTotalPrice = () => {\r\n        let price = 0;\r\n        for (let i = 0; i < this.listDisplay().length; i++) {\r\n            price += this.calculatePrice(this.listDisplay()[i])\r\n        }\r\n        return price\r\n\r\n    }\r\n    calculatePrice = (data) => {\r\n        const time = this.state.time\r\n        const type = data.name\r\n        const basePrice = this.getPrice(type)\r\n        const gameCount = this.getNumberOfGames()\r\n        const controllerCount = this.getNumberOfControllers()\r\n\r\n\r\n        if (time === 0.5) {\r\n            if (gameCount <= 5 && basePrice === 100) {\r\n                return 0\r\n            }\r\n            if (gameCount > 5 && basePrice === 100) {\r\n                return (gameCount - 5) * 100 * 0.5\r\n            }\r\n            if (controllerCount <= 2 && basePrice === 200) {\r\n                return 0\r\n            }\r\n            if (controllerCount > 2 && basePrice === 200) {\r\n                return (controllerCount - 3) * 100 * 0.5\r\n            }\r\n            return parseInt(basePrice * 0.5)\r\n        }\r\n        else if (time === 1) {\r\n            if (gameCount <= 5 && basePrice === 100) {\r\n                return 0\r\n            }\r\n            if (gameCount > 5 && basePrice === 100) {\r\n                return (gameCount - 5) * 100 * 1\r\n            }\r\n            if (controllerCount <= 2 && basePrice === 200) {\r\n                return 0\r\n            }\r\n            if (controllerCount > 2 && basePrice === 200) {\r\n                return (controllerCount - 3) * 100 * 1\r\n            }\r\n            return basePrice * 1\r\n        }\r\n        else if (time === 2) {\r\n            if (gameCount <= 5 && basePrice === 100) {\r\n                return 0\r\n            }\r\n            if (gameCount > 5 && basePrice === 100) {\r\n                return (gameCount - 5) * 100 * 2\r\n            }\r\n            if (controllerCount <= 2 && basePrice === 200) {\r\n                return 0\r\n            }\r\n            if (controllerCount > 2 && basePrice === 200) {\r\n                return (controllerCount - 3) * 100 * 2\r\n            }\r\n            return basePrice * 2\r\n        }\r\n        else if (time === 3) {\r\n            if (gameCount <= 5 && basePrice === 100) {\r\n                return 0\r\n            }\r\n            if (gameCount > 5 && basePrice === 100) {\r\n                return (gameCount - 5) * 100 * 3 * 0.75\r\n            }\r\n            if (controllerCount <= 2 && basePrice === 200) {\r\n                return 0\r\n            }\r\n            if (controllerCount > 2 && basePrice === 200) {\r\n                return (controllerCount - 3) * 100 * 3 * 0.75\r\n            }\r\n            return basePrice * 3 * 0.75\r\n        }\r\n        else if (time === 7) {\r\n            if (gameCount <= 5 && basePrice === 100) {\r\n                return 0\r\n            }\r\n            if (gameCount > 5 && basePrice === 100) {\r\n                return (gameCount - 5) * 100 * 6\r\n            }\r\n            if (controllerCount <= 2 && basePrice === 200) {\r\n                return 0\r\n            }\r\n            if (controllerCount > 2 && basePrice === 200) {\r\n                return (controllerCount - 3) * 100 * 6\r\n            }\r\n            return basePrice * 6\r\n\r\n        }\r\n    }\r\n\r\n    getNumberOfControllers = () => {\r\n        const allItems = this.state.items\r\n        const numberOfControllers = allItems.filter(item => item.controllerId)\r\n        return numberOfControllers.length\r\n    }\r\n    getNumberOfGames = () => {\r\n        const allItems = this.state.items\r\n        const numberOfGames = allItems.filter(item => item.gameId)\r\n        return numberOfGames.length\r\n    }\r\n    listDisplay = () => {\r\n        const excludedGames = this.state.items.filter(item => !item.gameId)\r\n        const numberOfGames = this.getNumberOfGames()\r\n        if (numberOfGames > 0) {\r\n            const games = {\r\n                name: `Games x ${numberOfGames}`\r\n            }\r\n\r\n            excludedGames.push(games)\r\n        }\r\n\r\n        return excludedGames\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ items: this.props.data })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"checkout-calculator-container\" >\r\n                <div className=\"duration\">\r\n                    <span>Duration:</span>\r\n                    <form>\r\n                        <div>\r\n                            <input type=\"radio\" name=\"duration\" id=\"\" defaultChecked value=\"0.5\" onChange={this.getInputValue} />\r\n                            <label htmlFor=\"\">12h</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" name=\"duration\" id=\"\" value=\"1\" onChange={this.getInputValue} />\r\n                            <label htmlFor=\"\">24h</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" name=\"duration\" id=\"\" value=\"2\" onChange={this.getInputValue} />\r\n                            <label htmlFor=\"\">2d</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" name=\"duration\" id=\"\" value=\"3\" onChange={this.getInputValue} />\r\n                            <label htmlFor=\"\">3d</label>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"radio\" name=\"duration\" id=\"\" value=\"7\" onChange={this.getInputValue} />\r\n                            <label htmlFor=\"\">7d</label>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n                <div className=\"final-price\">\r\n                    <div className=\"total\">\r\n                        <span>Total Price</span>\r\n                        <span>{`${this.calcTotalPrice()} rsd`}</span>\r\n                    </div>\r\n                    <ul>\r\n                        {\r\n                            this.listDisplay()\r\n                                .map((item, i) => {\r\n                                    return (<li key={i}>\r\n                                        <span className=\"name\">{item.name}</span>\r\n                                        <span className=\"price\">{this.calculatePrice(item)}</span>\r\n                                    </li>)\r\n                                })}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"checkout-btn\" onClick={this.rent}>\r\n                    Rent\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default CheckoutCalculator;\r\n","import { http } from '../services/HttpServices';\r\n\r\n\r\nexport const logIn = (data) => {\r\n    const requestURL = 'https://psrent.herokuapp.com/user/login';\r\n    return http.post(requestURL, data)\r\n\r\n}\r\n\r\nexport const register = (data) => {\r\n    const requestURL = 'https://psrent.herokuapp.com/user/register';\r\n    return http.post(requestURL, data)\r\n}\r\n\r\n\r\nexport const updateUser = (data, token) => {\r\n    const requestURL = 'https://psrent.herokuapp.com/user';\r\n    return http.patch(requestURL, data, token)\r\n}","import React from 'react';\r\n\r\n\r\n\r\nclass CheckedConsole extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"checked-console\">\r\n                <div className=\"remove-btn\" id={this.props.data._id} onClick={this.props.remove}>\r\n                    remove\r\n                </div>\r\n                <div className=\"console-img\">\r\n\r\n                </div>\r\n            </div >\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default CheckedConsole;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CheckedConsole from \"./CheckedConsole\"\r\n\r\n\r\nclass CheckoutConsole extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n    render() {\r\n\r\n        if (this.props.data.length > 0) {\r\n            return (\r\n                <div className=\"checkout-console-container\" >\r\n                    <CheckedConsole data={this.props.data[0]} remove={this.props.remove} />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"checkout-console-container\" >\r\n                <div className=\"checkout-console\">\r\n                    <Link to=\"console\"><span>+</span></Link>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CheckoutConsole;\r\n","import React from 'react';\r\n\r\n\r\n\r\nclass CheckedController extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"checked-controller\">\r\n                <div className=\"remove-btn\" id={this.props.data._id} onClick={this.props.remove}>\r\n                    remove\r\n                </div>\r\n                <div className=\"controller-img\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CheckedController;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CheckedController from './CheckedController';\r\n\r\n\r\n\r\nclass CheckoutController extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let { data } = this.props\r\n        for (let i = data.length; i < 4; i++) {\r\n            data[i] = {}\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"checkout-controller-container\" >\r\n                {data.map((obj, i) => obj.controllerId ? < CheckedController data={obj} key={i} remove={this.props.remove} /> : <div className=\"checkout-controller\" key={i} ><Link to=\"controller\"><span>+</span></Link></div>)}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CheckoutController;\r\n","import React from 'react';\r\n\r\n\r\n\r\nclass CheckedGame extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"checked-game\">\r\n                <div className=\"remove-btn\" id={this.props.data._id} onClick={this.props.remove}>\r\n                    remove\r\n                </div>\r\n                <div className=\"game-img\">\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default CheckedGame;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CheckedGame from './CheckedGame';\r\n\r\n\r\nclass CheckoutGames extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n        let { data } = this.props\r\n        for (let i = data.length; i < 8; i++) {\r\n            data[i] = {}\r\n        }\r\n        return (\r\n            <div className=\"checkout-games-container\" >\r\n                {data.map((obj, i) => obj.gameId ? < CheckedGame data={obj} key={i} remove={this.props.remove} /> : <div className=\"checkout-games\" key={i}><Link to=\"games\"><span>+</span></Link></div>)}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CheckoutGames;\r\n","import React from 'react';\r\nimport CheckoutCalculator from '../components/main-page/CheckoutCalculator';\r\nimport CheckoutConsole from '../components/main-page/CheckoutConsole';\r\nimport CheckoutController from '../components/main-page/CheckoutController';\r\nimport CheckoutGames from '../components/main-page/CheckoutGames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addItem, removeItem } from '../actions/mainActions'\r\nimport { removeCheckOutItem } from '../actions/addAction'\r\n\r\nclass Main extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            console: [],\r\n            controllers: [],\r\n            games: []\r\n        }\r\n    }\r\n    remove = (e) => {\r\n        const currentItems = this.props.items\r\n        const removedItem = e.target.id\r\n\r\n\r\n        this.props.removeItem(currentItems, removedItem)\r\n        this.isPicked()\r\n        this.props.removeCheckOutItem()\r\n    }\r\n\r\n    changePage = () => {\r\n        this.props.history.push(\"/account\")\r\n    }\r\n    isPicked() {\r\n        const consoles = this.props.items.filter(consoles => consoles.consoleId);\r\n\r\n        const controllers = this.props.items.filter(controllers => controllers.controllerId)\r\n\r\n        const games = this.props.items.filter(games => games.gameId)\r\n\r\n        this.setState({ console: consoles, controllers: controllers, games: games })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let currentItems = this.props.items\r\n        if (this.props.console.consoleId) {\r\n            const addedItem = this.props.console\r\n            this.props.addItem(currentItems, addedItem)\r\n            this.isPicked()\r\n        }\r\n        if (this.props.controller.controllerId) {\r\n            const addedItem = this.props.controller\r\n            this.props.addItem(currentItems, addedItem)\r\n            this.isPicked()\r\n        }\r\n        if (this.props.game.gameId) {\r\n            const addedItem = this.props.game\r\n            this.props.addItem(currentItems, addedItem)\r\n            this.isPicked()\r\n        }\r\n        if (this.props.tv.tvId) {\r\n            const addedItem = this.props.tv\r\n            this.props.addItem(currentItems, addedItem)\r\n            this.isPicked()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { console, controllers, games } = this.state\r\n\r\n\r\n        return (\r\n            <div className=\"main\">\r\n                <CheckoutConsole data={console} remove={this.remove} />\r\n                <CheckoutController data={controllers} remove={this.remove} />\r\n                <CheckoutGames data={games} remove={this.remove} />\r\n                <CheckoutCalculator data={this.props.items} changePage={this.changePage} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMain.propTypes = {\r\n    addItem: PropTypes.func.isRequired,\r\n    removeItem: PropTypes.func.isRequired,\r\n    removeCheckOutItem: PropTypes.func.isRequired,\r\n    console: PropTypes.object,\r\n    controller: PropTypes.object,\r\n    game: PropTypes.object,\r\n    tv: PropTypes.object,\r\n    items: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    console: state.checkout.item,\r\n    controller: state.checkout.item,\r\n    game: state.checkout.item,\r\n    tv: state.checkout.item,\r\n    items: state.main.items\r\n})\r\n\r\nexport default connect(mapStateToProps, { addItem, removeItem, removeCheckOutItem })(Main);\r\n","import { ADD_ITEM, REMOVE_ITEM } from './type';\r\n\r\n\r\nexport function addItem(currentData, newItem) {\r\n    return function (dispatch) {\r\n        let data = currentData\r\n        data.push(newItem)\r\n        let items = data\r\n\r\n        dispatch({\r\n            type: ADD_ITEM,\r\n            payload: items\r\n        })\r\n    }\r\n}\r\n\r\nexport function removeItem(currentData, deleteItem) {\r\n    return function (dispatch) {\r\n        let data = currentData\r\n        const indexOfDeletedItem = data.findIndex(element => element._id === deleteItem)\r\n        if (indexOfDeletedItem >= 0) {\r\n            data.splice(indexOfDeletedItem, 1)\r\n        }\r\n\r\n        const items = data\r\n\r\n\r\n        dispatch({\r\n            type: REMOVE_ITEM,\r\n            payload: items\r\n        })\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\n\r\nfunction TvButton(props) {\r\n    return (\r\n        <div className=\"btn-container\" >\r\n            <div className=\"button\" onClick={props.update} id={props.id}>Add</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TvButton;\r\n","import React from 'react';\r\n\r\n\r\nfunction TvImg() {\r\n    return (\r\n\r\n        <div className=\"tv-img \">\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default TvImg;\r\n","import React from 'react';\r\n\r\n\r\nfunction TvTitle(props) {\r\n    return (\r\n\r\n        <div className=\"title\">\r\n            <span>{props.title}</span>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TvTitle;\r\n","import React from 'react';\r\nimport TvButton from './TvButton';\r\nimport TvImg from './TvImg';\r\nimport TvTitle from './TvTitle';\r\nimport OutOfStock from '../OutOfStock';\r\n\r\n\r\n\r\nfunction Tv(props) {\r\n\r\n    if (props.available < 0) {\r\n        return (\r\n            <div className=\"tv-container\">\r\n                <OutOfStock></OutOfStock>\r\n                <TvImg />\r\n                <div className=\"tv-description\">\r\n                    <TvTitle title={props.title} />\r\n                    <TvButton update={props.update} id={props.tvId} />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <div className=\"tv-container\">\r\n            <TvImg />\r\n            <div className=\"tv-description\">\r\n                <TvTitle title={props.title} />\r\n                <TvButton update={props.update} id={props.tvId} />\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tv;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tv from '../components/tv-page/Tv'\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchTvs, updateTV } from '../actions/tvActions';\r\nimport { checkOutItem } from '../actions/addAction';\r\n\r\nclass TvPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            tvs: [],\r\n            updateTv: this.props.tvUpdated\r\n        }\r\n    }\r\n    updateTvAvailable = (e) => {\r\n        const id = parseInt(e.target.id)\r\n        const data = {\r\n            tvId: id,\r\n            available: -1\r\n        }\r\n\r\n        this.props.updateTV(data)\r\n    }\r\n\r\n    changePage = () => {\r\n        this.props.history.push('/')\r\n    }\r\n    writeCheckOutItem = () => {\r\n        this.props.checkOutItem(this.state.updateTv)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.tvs !== this.state.tvs) {\r\n            let tvs = this.state.tvs\r\n            this.setState({ tvs });\r\n        } else if (prevState.updateTv !== this.state.updateTv) {\r\n            let updateTv = this.state.updateTv\r\n            this.setState({ updateTv });\r\n            this.writeCheckOutItem()\r\n            this.changePage()\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.tvs !== prevState.tvs) {\r\n            return { tvs: nextProps.tvs };\r\n        } else if (nextProps.tvUpdated !== prevState.updateTv) {\r\n            return { updateTv: nextProps.tvUpdated };\r\n        }\r\n        else return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTvs()\r\n    }\r\n    render() {\r\n        const { tvs } = this.state\r\n        return (\r\n            <div className=\"tv-page\" >\r\n                {tvs.map(tv => { return <Tv available={tv.available} key={tv.tvId} tvId={tv.tvId} title={tv.name} update={this.updateTvAvailable} /> })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nTvPage.propTypes = {\r\n    fetchTvs: PropTypes.func.isRequired,\r\n    updateTV: PropTypes.func.isRequired,\r\n    checkOutItem: PropTypes.func.isRequired,\r\n    tvUpdated: PropTypes.object,\r\n\r\n    tvs: PropTypes.array.isRequired\r\n}\r\nconst mapStateToProps = state => ({ tvs: state.tvs.tvs, tvUpdated: state.tvs.tvUpdated })\r\nexport default connect(mapStateToProps, { fetchTvs, updateTV, checkOutItem })(TvPage);\r\n","import { FETCH_TV, UPDATE_TV } from './type';\r\n\r\n\r\n\r\nexport function fetchTvs() {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/tv';\r\n\r\n        fetch(requestURL,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(tvs => dispatch({\r\n                type: FETCH_TV,\r\n                payload: tvs\r\n            }))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function updateTV(data) {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/tv';\r\n        fetch(requestURL,\r\n            {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(tv => dispatch({\r\n                type: UPDATE_TV,\r\n                payload: tv\r\n            }))\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../actions/accountActions'\r\n\r\n\r\n\r\nclass AccountPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: {},\r\n            time: 0\r\n        }\r\n    }\r\n    calcTimeLeft = (date) => {\r\n        const countDownDate = new Date(date).getTime();\r\n        const now = new Date().getTime();\r\n\r\n        let distance = countDownDate - now;\r\n        if (distance < 0) {\r\n            distance = 0;\r\n        }\r\n        var days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        var seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        const textTime = days + \"d \" + hours + \"h \" + minutes + \"m \" + seconds + \"s \";\r\n        document.querySelector(\".time-left\").innerHTML = textTime\r\n    }\r\n    setRentedItems = (user) => {\r\n        let rented = []\r\n        if (user._id) {\r\n            const consoles = user.renting.items.console\r\n            const controllers = user.renting.items.controllers\r\n            const games = user.renting.items.games\r\n            const tv = user.renting.items.tv\r\n            rented.push(consoles)\r\n            rented.push(tv)\r\n            controllers.map(controller => rented.push(controller.name))\r\n            games.map(game => rented.push(game.name))\r\n            return rented.map((item, i) => { return (<li key={i}>{item}</li>) })\r\n        }\r\n    }\r\n    logOut = () => {\r\n        localStorage.removeItem(\"currentUser\")\r\n        this.props.history.push('/')\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.fetchUser()\r\n\r\n        // setTimeout(() => {\r\n        //     this.setState({ user: this.props.user })\r\n\r\n        //     this.interval = setInterval(() => this.calcTimeLeft(this.state.user.renting.time), 1000)\r\n        // }, 1200)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.user !== this.state.user) {\r\n            let user = this.state.user\r\n            this.setState({ user });\r\n            this.calcTimeLeft(this.state.user.renting.time)\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (nextProps.user !== prevState.user) {\r\n            return { user: nextProps.user };\r\n        }\r\n        else return null;\r\n    }\r\n\r\n\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { user } = this.state\r\n\r\n        return (\r\n            <div className=\"account-page\" >\r\n\r\n                <div className=\"account-info\">\r\n                    <h3>Account Information</h3>\r\n                    <div >\r\n                        <span>Name:</span>\r\n                        <span>{user.name}</span>\r\n                    </div>\r\n                    <div >\r\n                        <span>Username:</span>\r\n                        <span>{user.username}</span>\r\n                    </div>\r\n                    <div >\r\n                        <span>Password:</span>\r\n                        <span>*****</span>\r\n                        <span className=\"change-pass\">Change Password</span>\r\n                    </div>\r\n                    <div className=\"logout\" onClick={this.logOut}>\r\n                        Log Out\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"account-bonus\">\r\n                    <span>Bonus</span>\r\n                    <div className=\"bonus\"></div>\r\n                    <div className=\"bonus\"></div>\r\n                    <div className=\"bonus\"></div>\r\n                    <div className=\"bonus\"></div>\r\n                    <div className=\"bonus\"></div>\r\n                    <div className=\"bonus\"></div>\r\n                </div>\r\n                <div className=\"rent-info\">\r\n                    <div className=\"current-rent\">\r\n                        <h3>Currently renting</h3>\r\n                        <ul>\r\n                            {this.setRentedItems(this.state.user)}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"rent-time\">\r\n                        <div className=\"counter\">\r\n                            <span className=\"time-left\"></span>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAccountPage.propTypes = {\r\n    fetchUser: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({ user: state.user.user })\r\n\r\nexport default connect(mapStateToProps, { fetchUser })(AccountPage);\r\n","import { FETCH_USER } from './type';\r\n\r\n\r\n\r\nexport function fetchUser() {\r\n    return function (dispatch) {\r\n        const token = localStorage.getItem(\"currentUser\");\r\n        const requestURL = 'https://psrent.herokuapp.com/user';\r\n\r\n\r\n        fetch(requestURL,\r\n            {\r\n                method: 'GET',\r\n                headers: {\r\n                    'auth-token': `${token}`,\r\n                    'Content-Type': 'application/json',\r\n                }\r\n            })\r\n            .then(response => response.json())\r\n            .then(user => dispatch({\r\n                type: FETCH_USER,\r\n                payload: user\r\n            }))\r\n\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { register } from '../services/UserServices';\r\n\r\n\r\n\r\nclass RegisterPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            name: \"\",\r\n            email: \"\"\r\n        }\r\n    }\r\n\r\n    getUsername = (e) => {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n    getPassword = (e) => {\r\n        this.setState({ password: e.target.value })\r\n\r\n    }\r\n    getName = (e) => {\r\n        this.setState({ name: e.target.value })\r\n\r\n    }\r\n    getEmail = (e) => {\r\n        this.setState({ email: e.target.value })\r\n\r\n    }\r\n\r\n    registerUser = () => {\r\n        let data = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            name: this.state.name\r\n        }\r\n        register(data)\r\n            .then(response => console.log(response))\r\n            .then(x => this.props.history.push('/sign-in'))\r\n            .catch(err => console.log(err))\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"register-container\">\r\n                <div className=\"register\" >\r\n                    <h3>Register</h3>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" name=\"name\" id=\"name\" onChange={this.getName} />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" onChange={this.getEmail} />\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input type=\"text\" name=\"username\" id=\"username\" onChange={this.getUsername} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={this.getPassword} />\r\n                    <div className=\"register-btn\" onClick={this.registerUser}>\r\n                        <span>Register</span>\r\n                    </div>\r\n\r\n                    <Link to=\"/sign-in\">Sign In here</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { logIn } from '../services/UserServices'\r\n\r\nclass SignInPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\"\r\n\r\n        }\r\n    }\r\n    getUsername = (e) => {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n    getPassword = (e) => {\r\n        this.setState({ password: e.target.value })\r\n\r\n    }\r\n    loginUser = () => {\r\n        let data = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        logIn(data)\r\n            .then(response => localStorage.setItem(\"currentUser\", response))\r\n            .then(x => this.props.history.push('/'))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sign-in-container\">\r\n                <div className=\"sign-in\" >\r\n                    <h3>SIGN IN</h3>\r\n                    <label htmlFor=\"username\">Username</label>\r\n                    <input type=\"text\" name=\"username\" id=\"username\" onChange={this.getUsername} />\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" name=\"password\" id=\"password\" onChange={this.getPassword} />\r\n                    <div className=\"sign-in-btn\" onClick={this.loginUser}>\r\n                        <span>Sign In</span>\r\n                    </div>\r\n\r\n                    <Link to=\"/register\">Register here</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SignInPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"navbar\" >\r\n                <ul>\r\n                    <li><Link to=\"/console\">Console</Link></li>\r\n                    <li><Link to=\"/controller\">Controller</Link></li>\r\n                    <li><Link to=\"/\">Main</Link></li>\r\n                    <li><Link to=\"/games\">Games</Link></li>\r\n                    <li><Link to=\"/tv\">Tv</Link></li>\r\n                </ul>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"copyright\">\r\n                    <span>CopyRight 2020</span>\r\n                </div>\r\n                <div className=\"account\">\r\n                    <Link to=\"/account\">\r\n                        <i className=\"far fa-user fa-lg\"></i>\r\n                        <span>Account</span>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","export const isLogin = () => {\r\n    if (localStorage.getItem(\"currentUser\")) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './access';\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n    return (\r\n        // restricted = false meaning public route\r\n        // restricted = true meaning restricted route\r\n        <Route {...rest} render={props => (\r\n            isLogin() && restricted ?\r\n                <Redirect to=\"/dashboard\" />\r\n                : <Component  {...props} />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogin } from './access';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n\r\n        // Show the component only when the user is logged in\r\n        // Otherwise, redirect the user to /signin page\r\n        <Route {...rest} render={props => (\r\n            isLogin() ?\r\n                <Component {...props} />\r\n                : <Redirect to=\"/sign-in\" />\r\n        )} />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","import { FETCH_CONSOLE, UPDATE_CONSOLE } from '../actions/type';\r\n\r\nconst initialState = {\r\n    consoles: [],\r\n    consoleUpdated: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_CONSOLE:\r\n            return {\r\n                ...state,\r\n                consoles: action.payload\r\n            }\r\n        case UPDATE_CONSOLE:\r\n            return {\r\n                ...state,\r\n                consoleUpdated: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_CONTROLLER, UPDATE_CONTROLLER } from '../actions/type';\r\n\r\nconst initialState = {\r\n    controllers: [],\r\n    controllerUpdated: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_CONTROLLER:\r\n            return {\r\n                ...state,\r\n                controllers: action.payload\r\n            }\r\n        case UPDATE_CONTROLLER:\r\n            return {\r\n                ...state,\r\n                controllerUpdated: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_GAME, UPDATE_GAME } from '../actions/type';\r\n\r\nconst initialState = {\r\n    games: [],\r\n    gameUpdated: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_GAME:\r\n            return {\r\n                ...state,\r\n                games: action.payload\r\n            }\r\n        case UPDATE_GAME:\r\n            return {\r\n                ...state,\r\n                gameUpdated: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_TV, UPDATE_TV } from '../actions/type';\r\n\r\nconst initialState = {\r\n    tvs: [],\r\n    tvUpdated: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_TV:\r\n            return {\r\n                ...state,\r\n                tvs: action.payload\r\n            }\r\n        case UPDATE_TV:\r\n            return {\r\n                ...state,\r\n                tvUpdated: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_USER } from '../actions/type';\r\n\r\n\r\nconst initialState = {\r\n    user: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_ITEM, REMOVE_ITEM } from '../actions/type';\r\n\r\n\r\nconst initialState = {\r\n    items: []\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        case REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                items: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CHECKOUT_ITEM, REMOVE_CHECKOUT_ITEM } from '../actions/type';\r\n\r\n\r\nconst initialState = {\r\n    item: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHECKOUT_ITEM:\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            }\r\n        case REMOVE_CHECKOUT_ITEM:\r\n            return {\r\n                ...state,\r\n                item: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport consoleReducer from './consoleReducer';\r\nimport controllerReducer from './controllerReducer';\r\nimport gameReducer from './gameReducer';\r\nimport tvReducer from './tvReducer';\r\nimport accountReducer from './accountReducer';\r\nimport mainReducer from './mainReducer';\r\nimport addReducer from './addReducer';\r\n\r\n\r\n\r\nexport default combineReducers(\r\n    {\r\n        consoles: consoleReducer,\r\n        controllers: controllerReducer,\r\n        games: gameReducer,\r\n        tvs: tvReducer,\r\n        user: accountReducer,\r\n        main: mainReducer,\r\n        checkout: addReducer\r\n    }\r\n)","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\n\r\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n// window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport './scss/main.css';\r\n// pages\r\nimport ConsolePage from './page/ConsolePage';\r\nimport ControllerPage from './page/ControllerPage';\r\nimport GamesPage from './page/GamesPage';\r\nimport Main from './page/Main';\r\nimport TvPage from './page/TvPage';\r\nimport AccountPage from './page/AccountPage';\r\nimport RegisterPage from './page/RegisterPage';\r\nimport SignInPage from './page/SignInPage';\r\n\r\n// components\r\nimport Navbar from './components/Navbar'\r\nimport Footer from './components/Footer'\r\nimport { Switch } from 'react-router-dom';\r\n\r\n//private routes\r\nimport PublicRoute from './components/PublicRoute';\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\n// redux part \r\nimport { Provider } from 'react-redux';\r\nimport store from './store'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"App\" >\r\n          <Navbar />\r\n          <Switch>\r\n            <PrivateRoute component={Main} path=\"/\" exact />\r\n            <PrivateRoute component={AccountPage} path=\"/account\" exact />\r\n            <PrivateRoute component={ConsolePage} path=\"/console\" exact />\r\n            <PrivateRoute component={ControllerPage} path=\"/controller\" exact />\r\n            <PrivateRoute component={GamesPage} path=\"/games\" exact />\r\n            <PrivateRoute component={TvPage} path=\"/tv\" exact />\r\n            <PublicRoute restricted={true} component={SignInPage} path=\"/sign-in\" exact />\r\n            <PublicRoute restricted={true} component={RegisterPage} path=\"/register\" exact />\r\n          </Switch>\r\n          <Footer />\r\n\r\n\r\n\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}